{"version":3,"sources":["webpack:///./src/utils/client.ts","webpack:///./src/utils/Redirect.tsx","webpack:///./src/components/pages/LoginPage/style.module.scss","webpack:///./src/components/pages/LoginPage/index.tsx","webpack:///./src/pages/login.tsx"],"names":["runOnClient","task","window","useEffect","Redirect","to","navigate","module","exports","useStyles","makeStyles","_","createStyles","card","padding","password","marginBottom","LoginPage","id","classes","useState","isLoggingIn","setIsLoggingIn","setPassword","showPassword","setShowPassword","onLogin","login","Layout","className","style","main","title","Card","variant","CardContent","logo","src","logoSVG","alt","h1","h2","FormControl","InputLabel","htmlFor","OutlinedInput","type","value","onChange","event","target","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","isShow","onMouseDown","preventDefault","edge","disabled","labelWidth","Button","color","field","LoginRoutePage","basepath","withPrefix","default","path"],"mappings":"8FAAA,kDAIaA,EAAc,SAACC,GACJ,oBAAXC,OACTD,IAEAE,qBAAU,WACRF,MACC,M,kCCVP,iDAWeG,IAP+C,SAAC,GAAW,IAATC,EAAS,EAATA,GAI/D,OAHAL,aAAY,WACVM,mBAASD,MAEJ,uC,qBCPTE,EAAOC,QAAU,CAAC,KAAO,4BAA4B,KAAO,4BAA4B,KAAO,4BAA4B,GAAK,0BAA0B,GAAK,0BAA0B,SAAW,kC,0UCuB9LC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,UAEXC,SAAU,CACRC,aAAc,aA+ELC,EA1EoB,SAAC,GAAW,IAATC,EAAS,EAATA,GAC9BC,EAAUV,IAD6B,EAEPW,oBAAS,GAAxCC,EAFsC,KAEzBC,EAFyB,OAGbF,mBAAS,IAAlCL,EAHsC,KAG5BQ,EAH4B,OAILH,oBAAS,GAA1CI,EAJsC,KAIxBC,EAJwB,KAkBvCC,EAAO,8BAAG,YACTR,IAGLI,GAAe,SACTK,YAAMT,EAAIH,GAChBT,mBAAS,aANE,qDASb,OACE,kBAACsB,EAAA,EAAD,CAAQC,UAAWC,IAAMC,MACvB,kBAAC,IAAD,CAAKC,MAAM,UACX,kBAACC,EAAA,EAAD,CAAMC,QAAQ,YACZ,kBAACC,EAAA,EAAD,CAAaN,UAAcV,EAAQN,KAAb,IAAqBiB,IAAMjB,MAC/C,yBAAKgB,UAAWC,IAAMM,KAAMC,IAAKC,IAASC,IAAI,uBAC9C,wBAAIV,UAAWC,IAAMU,IAArB,WACA,wBAAIX,UAAWC,IAAMW,IAArB,uBACA,kBAACC,EAAA,EAAD,CAAaR,QAAQ,WAAWL,UAAWV,EAAQJ,UACjD,kBAAC4B,EAAA,EAAD,CAAYC,QAAQ,+BAApB,YACA,kBAACC,EAAA,EAAD,CACE3B,GAAG,8BACH4B,KAAMtB,EAAe,OAAS,WAC9BuB,MAAOhC,EACPiC,SA/BS,SAACC,GACpB1B,EAAY0B,EAAMC,OAAOH,QA+BfI,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACvB,kBAACC,EAAA,EAAD,CACEC,aAAW,6BACXC,QAxCc,WAC9B/B,GAAgB,SAACgC,GAAD,OAAaA,MAwCbC,YAjCc,SAACT,GAC/BA,EAAMU,kBAiCUC,KAAK,MACLC,SAAUxC,GAETG,EAAe,kBAAC,IAAD,MAAiB,kBAAC,IAAD,QAIvCsC,WAAY,GACZD,SAAUxC,KAGd,kBAAC0C,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,YACNnC,UAAWC,IAAMmC,MACjBT,QAAS9B,EACTmC,SAAUxC,GALZ,a,wBC/EK6C,UATkB,WAC/B,OACE,kBAAC,SAAD,CAAQC,SAAUC,qBAAW,MAC3B,kBAAChE,EAAA,EAAD,CAAUC,GAAG,IAAIgE,SAAO,IACxB,kBAAC,EAAD,CAAWC,KAAK","file":"component---src-pages-login-tsx-b63f55a239bce92b5b30.js","sourcesContent":["import { useEffect } from 'react';\n\ntype Callback = () => void;\n\nexport const runOnClient = (task: Callback): void => {\n  if (typeof window !== 'undefined') {\n    task();\n  } else {\n    useEffect(() => {\n      task();\n    }, []);\n  }\n};\n","import React from 'react';\nimport { navigate } from 'gatsby';\nimport { runOnClient } from './client';\n\nconst Redirect: React.FC<{ to: string; default?: boolean }> = ({ to }) => {\n  runOnClient(() => {\n    navigate(to);\n  });\n  return <></>;\n};\n\nexport default Redirect;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"style-module--main--31JuX\",\"card\":\"style-module--card--2Oh4j\",\"logo\":\"style-module--logo--3nWOl\",\"h1\":\"style-module--h1--MGKXa\",\"h2\":\"style-module--h2--Fbq2M\",\"password\":\"style-module--password--irXAc\"};","import React, { useState } from 'react';\nimport { navigate } from 'gatsby';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { login } from 'src/api';\nimport SEO from 'src/components/seo';\nimport Layout from 'src/components/Layout';\nimport logoSVG from 'src/images/logo.svg';\nimport style from './style.module.scss';\n\ninterface Props {\n  path: string;\n  id?: string;\n}\n\nconst useStyles = makeStyles((_) =>\n  createStyles({\n    card: {\n      padding: '1.6rem',\n    },\n    password: {\n      marginBottom: '1rem',\n    },\n  }),\n);\n\nconst LoginPage: React.FC<Props> = ({ id }) => {\n  const classes = useStyles();\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword((isShow) => !isShow);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setPassword(event.target.value);\n  };\n\n  const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    event.preventDefault();\n  };\n\n  const onLogin = async () => {\n    if (!id) {\n      return;\n    }\n    setIsLoggingIn(true);\n    await login(id, password);\n    navigate('/edit');\n  };\n\n  return (\n    <Layout className={style.main}>\n      <SEO title=\"Login\" />\n      <Card variant=\"outlined\">\n        <CardContent className={`${classes.card} ${style.card}`}>\n          <img className={style.logo} src={logoSVG} alt=\"Time to leave logo\" />\n          <h1 className={style.h1}>Sign in</h1>\n          <h2 className={style.h2}>to continue to edit</h2>\n          <FormControl variant=\"outlined\" className={classes.password}>\n            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n            <OutlinedInput\n              id=\"outlined-adornment-password\"\n              type={showPassword ? 'text' : 'password'}\n              value={password}\n              onChange={handleChange}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\"\n                    disabled={isLoggingIn}\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n              labelWidth={70}\n              disabled={isLoggingIn}\n            />\n          </FormControl>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className={style.field}\n            onClick={onLogin}\n            disabled={isLoggingIn}\n          >\n            Login\n          </Button>\n        </CardContent>\n      </Card>\n    </Layout>\n  );\n};\n\nexport default LoginPage;\n","import React from 'react';\nimport { withPrefix } from 'gatsby';\nimport LoginPage from 'src/components/pages/LoginPage';\nimport Redirect from 'src/utils/Redirect';\nimport { Router } from '@reach/router';\n\nconst LoginRoutePage: React.FC = () => {\n  return (\n    <Router basepath={withPrefix('/')}>\n      <Redirect to=\"/\" default />\n      <LoginPage path=\"/login/:id\" />\n    </Router>\n  );\n};\n\nexport default LoginRoutePage;\n"],"sourceRoot":""}